# Autogenerated by nbdev

d = { 'settings': { 'branch': '0',
                'doc_baseurl': '/sen-ai',
                'doc_host': 'https://0.github.io',
                'git_url': 'https://github.com/0/sen-ai',
                'lib_path': 'sen_ai'},
  'syms': { 'sen_ai.activations': { 'sen_ai.activations.Hook': ('activations.html#hook', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hook.__del__': ('activations.html#hook.__del__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hook.__init__': ('activations.html#hook.__init__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hook.remove': ('activations.html#hook.remove', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks': ('activations.html#hooks', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks.__del__': ('activations.html#hooks.__del__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks.__delitem__': ('activations.html#hooks.__delitem__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks.__enter__': ('activations.html#hooks.__enter__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks.__exit__': ('activations.html#hooks.__exit__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks.__init__': ('activations.html#hooks.__init__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.Hooks.remove': ('activations.html#hooks.remove', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB': ('activations.html#hookscb', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.__init__': ('activations.html#hookscb.__init__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.__iter__': ('activations.html#hookscb.__iter__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.__len__': ('activations.html#hookscb.__len__', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB._hookfunc': ('activations.html#hookscb._hookfunc', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.after_fit': ('activations.html#hookscb.after_fit', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.before_fit': ( 'activations.html#hookscb.before_fit',
                                                                               'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.color_dim': ('activations.html#hookscb.color_dim', 'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.dead_chart': ( 'activations.html#hookscb.dead_chart',
                                                                               'sen_ai/activations.py'),
                                    'sen_ai.activations.HooksCB.plot_stats': ( 'activations.html#hookscb.plot_stats',
                                                                               'sen_ai/activations.py'),
                                    'sen_ai.activations.append_stats': ('activations.html#append_stats', 'sen_ai/activations.py'),
                                    'sen_ai.activations.get_hist': ('activations.html#get_hist', 'sen_ai/activations.py'),
                                    'sen_ai.activations.get_min': ('activations.html#get_min', 'sen_ai/activations.py'),
                                    'sen_ai.activations.set_seed': ('activations.html#set_seed', 'sen_ai/activations.py')},
            'sen_ai.conv': { 'sen_ai.conv.collate_': ('conv.html#collate_', 'sen_ai/conv.py'),
                             'sen_ai.conv.conv': ('conv.html#conv', 'sen_ai/conv.py'),
                             'sen_ai.conv.to_device': ('conv.html#to_device', 'sen_ai/conv.py')},
            'sen_ai.core': { 'sen_ai.core.collate_dict': ('fashion_mnist.html#collate_dict', 'sen_ai/core.py'),
                             'sen_ai.core.get_grid': ('fashion_mnist.html#get_grid', 'sen_ai/core.py'),
                             'sen_ai.core.inplace': ('fashion_mnist.html#inplace', 'sen_ai/core.py'),
                             'sen_ai.core.show_image': ('fashion_mnist.html#show_image', 'sen_ai/core.py'),
                             'sen_ai.core.show_images': ('fashion_mnist.html#show_images', 'sen_ai/core.py'),
                             'sen_ai.core.subplots': ('fashion_mnist.html#subplots', 'sen_ai/core.py')},
            'sen_ai.learner': { 'sen_ai.learner.Callback': ('learner.html#callback', 'sen_ai/learner.py'),
                                'sen_ai.learner.CancelBatchException': ('learner.html#cancelbatchexception', 'sen_ai/learner.py'),
                                'sen_ai.learner.CancelEpochException': ('learner.html#cancelepochexception', 'sen_ai/learner.py'),
                                'sen_ai.learner.CancelFitException': ('learner.html#cancelfitexception', 'sen_ai/learner.py'),
                                'sen_ai.learner.DeviceCB': ('learner.html#devicecb', 'sen_ai/learner.py'),
                                'sen_ai.learner.DeviceCB.__init__': ('learner.html#devicecb.__init__', 'sen_ai/learner.py'),
                                'sen_ai.learner.DeviceCB.before_batch': ('learner.html#devicecb.before_batch', 'sen_ai/learner.py'),
                                'sen_ai.learner.DeviceCB.before_fit': ('learner.html#devicecb.before_fit', 'sen_ai/learner.py'),
                                'sen_ai.learner.LR_find': ('learner.html#lr_find', 'sen_ai/learner.py'),
                                'sen_ai.learner.LR_find.__init__': ('learner.html#lr_find.__init__', 'sen_ai/learner.py'),
                                'sen_ai.learner.LR_find.after_batch': ('learner.html#lr_find.after_batch', 'sen_ai/learner.py'),
                                'sen_ai.learner.LR_find.before_fit': ('learner.html#lr_find.before_fit', 'sen_ai/learner.py'),
                                'sen_ai.learner.LR_find.plot': ('learner.html#lr_find.plot', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner': ('learner.html#learner', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner.__init__': ('learner.html#learner.__init__', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner._fit': ('learner.html#learner._fit', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner._one_epoch': ('learner.html#learner._one_epoch', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner.callback': ('learner.html#learner.callback', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner.fit': ('learner.html#learner.fit', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner.one_batch': ('learner.html#learner.one_batch', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner.one_epoch': ('learner.html#learner.one_epoch', 'sen_ai/learner.py'),
                                'sen_ai.learner.Learner.training': ('learner.html#learner.training', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB': ('learner.html#metricscb', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB.__init__': ('learner.html#metricscb.__init__', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB._log': ('learner.html#metricscb._log', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB.after_batch': ('learner.html#metricscb.after_batch', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB.after_epoch': ('learner.html#metricscb.after_epoch', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB.before_epoch': ('learner.html#metricscb.before_epoch', 'sen_ai/learner.py'),
                                'sen_ai.learner.MetricsCB.before_fit': ('learner.html#metricscb.before_fit', 'sen_ai/learner.py'),
                                'sen_ai.learner.MomentumLearner': ('learner.html#momentumlearner', 'sen_ai/learner.py'),
                                'sen_ai.learner.MomentumLearner.__init__': ('learner.html#momentumlearner.__init__', 'sen_ai/learner.py'),
                                'sen_ai.learner.MomentumLearner.zero_grad': ('learner.html#momentumlearner.zero_grad', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB': ('learner.html#progresscb', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB.__init__': ('learner.html#progresscb.__init__', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB._log': ('learner.html#progresscb._log', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB.after_batch': ('learner.html#progresscb.after_batch', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB.after_epoch': ('learner.html#progresscb.after_epoch', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB.before_epoch': ('learner.html#progresscb.before_epoch', 'sen_ai/learner.py'),
                                'sen_ai.learner.ProgressCB.before_fit': ('learner.html#progresscb.before_fit', 'sen_ai/learner.py'),
                                'sen_ai.learner.TrainLearner': ('learner.html#trainlearner', 'sen_ai/learner.py'),
                                'sen_ai.learner.TrainLearner.backward': ('learner.html#trainlearner.backward', 'sen_ai/learner.py'),
                                'sen_ai.learner.TrainLearner.calc_loss': ('learner.html#trainlearner.calc_loss', 'sen_ai/learner.py'),
                                'sen_ai.learner.TrainLearner.predict': ('learner.html#trainlearner.predict', 'sen_ai/learner.py'),
                                'sen_ai.learner.TrainLearner.step': ('learner.html#trainlearner.step', 'sen_ai/learner.py'),
                                'sen_ai.learner.TrainLearner.zero_grad': ('learner.html#trainlearner.zero_grad', 'sen_ai/learner.py'),
                                'sen_ai.learner.lr_find': ('learner.html#lr_find', 'sen_ai/learner.py'),
                                'sen_ai.learner.run_cbs': ('learner.html#run_cbs', 'sen_ai/learner.py'),
                                'sen_ai.learner.to_cpu': ('learner.html#to_cpu', 'sen_ai/learner.py'),
                                'sen_ai.learner.with_cbs': ('learner.html#with_cbs', 'sen_ai/learner.py'),
                                'sen_ai.learner.with_cbs.__call__': ('learner.html#with_cbs.__call__', 'sen_ai/learner.py'),
                                'sen_ai.learner.with_cbs.__init__': ('learner.html#with_cbs.__init__', 'sen_ai/learner.py')},
            'sen_ai.training': { 'sen_ai.training.Dataset': ('mlp.html#dataset', 'sen_ai/training.py'),
                                 'sen_ai.training.Dataset.__getitem__': ('mlp.html#dataset.__getitem__', 'sen_ai/training.py'),
                                 'sen_ai.training.Dataset.__init__': ('mlp.html#dataset.__init__', 'sen_ai/training.py'),
                                 'sen_ai.training.Dataset.__len__': ('mlp.html#dataset.__len__', 'sen_ai/training.py'),
                                 'sen_ai.training.accuracy': ('mlp.html#accuracy', 'sen_ai/training.py'),
                                 'sen_ai.training.fit': ('mlp.html#fit', 'sen_ai/training.py'),
                                 'sen_ai.training.get_dls': ('mlp.html#get_dls', 'sen_ai/training.py'),
                                 'sen_ai.training.report': ('mlp.html#report', 'sen_ai/training.py')}}}
